import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import Information from '../components/Information';
import QuickLink from '../components/QuickLink';
import Slogan from '../components/Slogan';
import CatalogArea from '../components/CatalogArea';
import styles from '../styles/Home.module.css';
import { Box } from '@chakra-ui/react';

const Home: NextPage<any> = ({ sloganData, newsData, linkData }) => {
  return (
    <>
      <div style={{ backgroundColor: '#f7f7f7' }}>
        <div className={styles.container}>
          <Head>
            <title>Create Next App</title>
            <meta name='description' content='Generated by create next app' />
            <link rel='icon' href='/favicon.ico' />
          </Head>
          <main>
            <Box w={{ base: '100%', md: '800px' }} mx='auto' py='6'>
              <Slogan slogan={sloganData.slogan} />
              <Information news={newsData.contents} />
              <QuickLink link={linkData.contents} />
              <CatalogArea />
            </Box>
          </main>
        </div>
        <footer className={styles.footer}>
          <a
            href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
            target='_blank'
            rel='noopener noreferrer'
          >
            &copy; daimaru-hakui
            <span className={styles.logo}>
              {/* <Image src='/vercel.svg' alt='Vercel Logo' width={72} height={16} /> */}
            </span>
          </a>
        </footer>
      </div>
    </>
  );
};

export default Home;

export async function getStaticProps() {
  const accessPoint = 'https://portal-site.microcms.io/api/v1';
  const options = {
    headers: {
      'X-MICROCMS-API-KEY': '5c23d3e8eaa0448388ca527e0e00c829611f',
    },
  };
  const sloganRes = await fetch(`${accessPoint}/slogan`, options);
  const sloganData = await sloganRes.json();
  const newsRes = await fetch(`${accessPoint}/news`, options);
  const newsData = await newsRes.json();
  const linkRes = await fetch(`${accessPoint}/access-link`, options);
  const linkData = await linkRes.json();

  return {
    props: {
      sloganData,
      newsData,
      linkData,
    },
  };
}
